
{# Associate lib JS and CSS to this template #}
{{ attach_library('gmlifetheme/slider-swiper') }}

{%
  set classes = [
     paragraph.field_extra_classes.value|render|trim,
    'paragraph', 
    'swiper-container type-swiper-slider',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished'
  ]
%}


{# Set vars to mount the slider #}

{% set delay = paragraph.field_autoplay_delay.value|render|trim %}
{% set navigation = paragraph.field_navigation.value|render|trim %}
{% set pagination = paragraph.field_pagination.value|render|trim %}
{% set speed = paragraph.field_transition_speed.value|render|trim %}
{# Add atributes to grab on JS #}

{% set attributes = attributes.addClass(classes) %}
{% if delay %}
    {% set attributes = attributes.setAttribute('data-delay', delay) %}
{% endif %}
{% if navigation %}
    {% set attributes = attributes.setAttribute('data-navigation', navigation) %}
{% endif %}
{% if pagination %}
    {% set attributes = attributes.setAttribute('data-pagination', pagination) %}
{% endif %}
{% if speed %}
    {% set attributes = attributes.setAttribute('data-speed', speed) %}
{% endif %}
    {% set attributes = attributes.setAttribute('data-parallax', 'true') %}


{# Resolver o problema do QUICKEDIT a mao.. - adicionar o atributo a m√£o - data-quickedit-entity-id #}
{% set attributes = attributes.setAttribute('data-quickedit-entity-id', 'paragraphs_library_item/7') %}

{# Set var to find the URL of Media Image #}
{% set image_url = file_url(content.field_image[0]['#media'].field_media_image.entity.uri.value) %}


{% block paragraph %}
 <!-- Slider main container -->
  <div {{ attributes}} >
    <div class="parallax-bg" data-swiper-parallax="-23%"
     {# Conditionals for add background - field values #}

    {% if paragraph.field_background_gradient.value|render|trim %}
        style="background-image: {{ paragraph.field_background_gradient.value|render|trim }}, 
        url({{ image_url1 }}); background-blend-mode: {{ paragraph.field_background_blend_mode.value|render|trim }}"
    {% elseif paragraph.field_background_solid_color.value|render|trim %}
        style="background-color: {{ paragraph.field_background_solid_color.value|render|trim }}; 
        background-image: url({{ image_url1 }}); 
        background-blend-mode: {{ paragraph.field_background_blend_mode.value|render|trim }}"
    {% elseif image_url != '/' %}
        style="background-image: url({{ image_url1 }})"
    {% else %}	
    {% endif %}

    >
    

    </div>
    {% block content %}

   
    <!-- Additional required wrapper -->
    <div class="swiper-wrapper">
        <!-- Slides -->
        {{ content.field_add_columns }} 
        {# <div class="swiper-slide">Slide 1</div> #}
    </div>
    <!-- If we need pagination -->
    {% if pagination %}
      <div class="swiper-pagination"></div>
    {% endif %}

    <!-- If we need navigation Arrows -->
    {% if navigation %}
        <div class="swiper-button-prev"></div>
        <div class="swiper-button-next"></div>
    {% endif %}

    <!-- If we need scrollbar -->
    {# <div class="swiper-scrollbar"></div> #}

    {% endblock %}
  </div>
{% endblock paragraph %}
